{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/myPlaylist/src/cmps/SelectedVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { storageService } from '../services/storageService'; // import { videoService } from '../services/videoService';\n\nexport function SelectedVideo({\n  video,\n  saveToFavorites\n}) {\n  _s();\n\n  var _video$id, _lastVideo$id, _video$snippet, _lastVideo$snippet, _video$snippet2, _lastVideo$snippet2;\n\n  const [lastVideo, setLastVideo] = useState({});\n  const {\n    favorites\n  } = useSelector(state => state.listModule);\n  const opts = {\n    height: '510px',\n    width: '100%',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const _onReady = event => {\n    event.target.pauseVideo();\n  };\n\n  useEffect(() => {\n    console.log('isFavorites is:', favorites);\n  }, [favorites]);\n  useEffect(() => {\n    const loadFromSession = storageService.saveSession('lastVideo', video);\n\n    if (loadFromSession) {\n      setLastVideo(loadFromSession);\n    } // loadFromSession(video)\n\n  }, [video]); // function loadFromSession() {\n  // }\n\n  if (!video) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    children: [/*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: ((_video$id = video.id) === null || _video$id === void 0 ? void 0 : _video$id.videoId) || ((_lastVideo$id = lastVideo.id) === null || _lastVideo$id === void 0 ? void 0 : _lastVideo$id.videoId),\n      opts: opts,\n      onReady: _onReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: ((_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : _video$snippet.title) || ((_lastVideo$snippet = lastVideo.snippet) === null || _lastVideo$snippet === void 0 ? void 0 : _lastVideo$snippet.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ((_video$snippet2 = video.snippet) === null || _video$snippet2 === void 0 ? void 0 : _video$snippet2.description) || ((_lastVideo$snippet2 = lastVideo.snippet) === null || _lastVideo$snippet2 === void 0 ? void 0 : _lastVideo$snippet2.description)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"star\",\n        onClick: () => saveToFavorites(video),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: video.favorite || lastVideo.favorite ? 'favorite' : '',\n          children: \"\\u2606\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectedVideo, \"aokuPwjbYJzAnRTrWAH80bZh27I=\", false, function () {\n  return [useSelector];\n});\n\n_c = SelectedVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedVideo\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/myPlaylist/src/cmps/SelectedVideo.jsx"],"names":["React","useEffect","useState","useSelector","YouTube","storageService","SelectedVideo","video","saveToFavorites","lastVideo","setLastVideo","favorites","state","listModule","opts","height","width","playerVars","autoplay","_onReady","event","target","pauseVideo","console","log","loadFromSession","saveSession","id","videoId","snippet","title","description","favorite"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,cAAT,QAA+B,4BAA/B,C,CACA;;AAEA,OAAO,SAASC,aAAT,CAAuB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAvB,EAAmD;AAAA;;AAAA;;AACtD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAgBR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAjC;AACA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,OADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,UAAU,EAAE;AACRC,MAAAA,QAAQ,EAAE;AADF;AAHH,GAAb;;AAQA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,MAAN,CAAaC,UAAb;AACH,GAFD;;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bb,SAA/B;AAEH,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,eAAe,GAAGpB,cAAc,CAACqB,WAAf,CAA2B,WAA3B,EAAwCnB,KAAxC,CAAxB;;AACA,QAAIkB,eAAJ,EAAqB;AACjBf,MAAAA,YAAY,CAACe,eAAD,CAAZ;AACH,KAJW,CAKZ;;AACH,GANQ,EAMN,CAAClB,KAAD,CANM,CAAT,CApBsD,CA4BtD;AAEA;;AAGA,MAAI,CAACA,KAAL,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,sBAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,cAAAA,KAAK,CAACoB,EAAN,wDAAUC,OAAV,uBAAqBnB,SAAS,CAACkB,EAA/B,kDAAqB,cAAcC,OAAnC,CAAlB;AAA8D,MAAA,IAAI,EAAEd,IAApE;AAA0E,MAAA,OAAO,EAAEK;AAAnF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA,kBAAK,mBAAAZ,KAAK,CAACsB,OAAN,kEAAeC,KAAf,4BAAwBrB,SAAS,CAACoB,OAAlC,uDAAwB,mBAAmBC,KAA3C;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAI,oBAAAvB,KAAK,CAACsB,OAAN,oEAAeE,WAAf,6BAA8BtB,SAAS,CAACoB,OAAxC,wDAA8B,oBAAmBE,WAAjD;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,OAAO,EAAE,MAAMvB,eAAe,CAACD,KAAD,CAFlC;AAAA,+BAGI;AAAM,UAAA,SAAS,EAAGA,KAAK,CAACyB,QAAN,IAAkBvB,SAAS,CAACuB,QAA7B,GAAyC,UAAzC,GAAsD,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH;;GAnDe1B,a;UAEUH,W;;;KAFVG,a","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport { storageService } from '../services/storageService';\n// import { videoService } from '../services/videoService';\n\nexport function SelectedVideo({ video, saveToFavorites }) {\n    const [lastVideo, setLastVideo] = useState({})\n    const { favorites } = useSelector(state => state.listModule)\n    const opts = {\n        height: '510px',\n        width: '100%',\n        playerVars: {\n            autoplay: 1,\n        },\n    }\n\n    const _onReady = (event) => {\n        event.target.pauseVideo();\n    }\n\n    useEffect(() => {\n        console.log('isFavorites is:', favorites);\n\n    }, [favorites])\n\n    useEffect(() => {\n        const loadFromSession = storageService.saveSession('lastVideo', video)\n        if (loadFromSession) {\n            setLastVideo(loadFromSession)\n        }\n        // loadFromSession(video)\n    }, [video])\n\n    // function loadFromSession() {\n\n    // }\n\n\n    if (!video) return <div>Loading..</div>\n    return (\n\n        <div className=\"video-player\">\n            <YouTube videoId={video.id?.videoId || lastVideo.id?.videoId} opts={opts} onReady={_onReady} />\n            <div className=\"info\">\n                <h1>{video.snippet?.title || lastVideo.snippet?.title}</h1>\n                <p>{video.snippet?.description || lastVideo.snippet?.description}</p>\n                {/* <p>Date: {video.snippet?.publishTime || video.snippet.publishedAt}</p> */}\n                <button\n                    className=\"star\"\n                    onClick={() => saveToFavorites(video)}>\n                    <span className={(video.favorite || lastVideo.favorite) ? 'favorite' : ''}>â˜†</span>\n                </button>\n            </div>\n        </div >\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}