{"ast":null,"code":"import axios from \"axios\";\nimport { storageService } from './storageService.js';\nconst VIDEOS_KEY = 'video';\nconst KEYWORD_KEY = 'keyword';\nconst FAVORITES_VIDEOS = 'favorites';\nconst BASE_URL = 'http://localhost:3030/favorites';\nexport const videoService = {\n  query,\n  chackIsFavorites,\n  historylist,\n  deleteFromFavorites,\n  queryFavorites,\n  saveVideoToFavorites,\n  removeVideo\n};\n\nasync function query(keyword) {\n  console.log('keyword is:', keyword);\n  var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY);\n  if (keyword === '' && !storageKeyword) keyword = 'Angular';\n\n  if (keyword === storageKeyword || keyword === '') {\n    return storageService.loadFromStorage(VIDEOS_KEY);\n  } // var listFromStorge = storageService.loadFromStorage(keyword)\n  // return listFromStorge\n\n\n  const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n  const videos = res.data;\n  storageService.saveToStorage(VIDEOS_KEY, videos);\n  storageService.saveToStorage(KEYWORD_KEY, keyword);\n  return videos;\n}\n\nasync function queryFavorites() {\n  try {\n    const res = await axios.get(BASE_URL);\n    const favorites = res.data;\n    storageService.saveToStorage('favoritesList', favorites);\n    return favorites;\n  } catch {\n    console.log('soryyy i cant to query favorites');\n  }\n}\n\nfunction chackIsFavorites(list, videoToChack) {\n  console.log('list ,videoToChack is:', list, videoToChack);\n\n  if (videoToChack !== {} || !list) {\n    const isFavorites = list.some(video => {\n      var _videoToChack$id;\n\n      return video.id.videoId === ((_videoToChack$id = videoToChack.id) === null || _videoToChack$id === void 0 ? void 0 : _videoToChack$id.videoId);\n    });\n    if (isFavorites) return true;else return false;\n  } else return;\n}\n\nasync function saveVideoToFavorites(video) {\n  video.favorite = true;\n  const res = await axios.post(BASE_URL, video);\n  return res.data;\n}\n\nfunction deleteFromFavorites(list, videoId) {\n  const idx = list.findIndex(video => video.id === videoId);\n  console.log('idx is:', idx);\n  list[idx].favorite = false;\n  list.splice(idx, 1);\n  return list;\n}\n\nasync function removeVideo(video) {\n  try {\n    console.log('video is:', video);\n    const res = await axios.delete(`${BASE_URL}/${video.id.videoId}`);\n    return res.data;\n  } catch {\n    console.log('soryyy');\n  }\n}\n\nfunction historylist(history, video) {\n  var copy = [...history];\n  console.log('copy is:', copy);\n  copy.push(video);\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/services/videoService.js"],"names":["axios","storageService","VIDEOS_KEY","KEYWORD_KEY","FAVORITES_VIDEOS","BASE_URL","videoService","query","chackIsFavorites","historylist","deleteFromFavorites","queryFavorites","saveVideoToFavorites","removeVideo","keyword","console","log","storageKeyword","loadFromStorage","res","get","videos","data","saveToStorage","favorites","list","videoToChack","isFavorites","some","video","id","videoId","favorite","post","idx","findIndex","splice","delete","history","copy","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { storageService } from './storageService.js'\n\nconst VIDEOS_KEY = 'video'\nconst KEYWORD_KEY = 'keyword'\nconst FAVORITES_VIDEOS = 'favorites'\n\nconst BASE_URL = 'http://localhost:3030/favorites';\nexport const videoService = {\n    query,\n    chackIsFavorites,\n    historylist,\n    deleteFromFavorites,\n    queryFavorites,\n    saveVideoToFavorites,\n    removeVideo\n}\n\nasync function query(keyword) {\n    console.log('keyword is:', keyword);\n    var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n    if (keyword === '' && !storageKeyword) keyword = 'Angular'\n\n    if (keyword === storageKeyword || keyword === '') {\n        return storageService.loadFromStorage(VIDEOS_KEY)\n    }\n    // var listFromStorge = storageService.loadFromStorage(keyword)\n\n    // return listFromStorge\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n    const videos = res.data;\n    storageService.saveToStorage(VIDEOS_KEY, videos)\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\n    return videos;\n}\nasync function queryFavorites() {\n    try {\n        const res = await axios.get(BASE_URL);\n        const favorites = res.data;\n        storageService.saveToStorage('favoritesList', favorites)\n        return favorites;\n    } catch {\n        console.log('soryyy i cant to query favorites');\n    }\n\n}\n\nfunction chackIsFavorites(list, videoToChack) {\n    console.log('list ,videoToChack is:', list, videoToChack);\n    if (videoToChack !== {} || !list) {\n        const isFavorites = list.some(video => video.id.videoId === videoToChack.id?.videoId)\n        if (isFavorites) return true\n        else return false\n\n    } else return\n}\n\nasync function saveVideoToFavorites(video) {\n    video.favorite = true\n    const res = await axios.post(BASE_URL, video);\n    return res.data;\n}\n\nfunction deleteFromFavorites(list, videoId) {\n    const idx = list.findIndex(video => video.id === videoId)\n    console.log('idx is:', idx);\n    list[idx].favorite = false\n    list.splice(idx, 1)\n    return list\n}\n\nasync function removeVideo(video) {\n    try {\n        console.log('video is:', video);\n        const res = await axios.delete(`${BASE_URL}/${video.id.videoId}`)\n        return res.data\n    }\n    catch {\n        console.log('soryyy');\n    }\n}\n\nfunction historylist(history, video) {\n    var copy = [...history]\n    console.log('copy is:', copy);\n    copy.push(video)\n}\n\n"]},"metadata":{},"sourceType":"module"}