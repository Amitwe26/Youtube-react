{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/cmps/FavoritesList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteVideo, setVideo } from '../actions/ListAction';\nimport { videoService } from '../services/videoService';\nimport { FavoritePreview } from './FavoritePreview';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nexport function FavoritesList() {\n  _s();\n\n  const {\n    favorites\n  } = useSelector(state => state.listModule);\n  const [list, setlist] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log('im loading');\n    loadFavorites();\n  }, [favorites]);\n\n  async function loadFavorites() {\n    const favorites = await videoService.queryFavorites();\n    setlist(favorites);\n  }\n\n  function setCurrVideo(ev, video) {\n    ev.stopPropagation();\n    dispatch(setVideo(video));\n  }\n\n  const deleteFromList = (ev, video) => {\n    ev.stopPropagation();\n    deleteVideo(video);\n    const newList = videoService.deleteFromFavorites(list, video.id);\n    setlist(newList);\n  };\n\n  const handleDragEnd = res => {\n    console.log('res is:', res);\n  };\n\n  console.log('list is:', list);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"favoList\",\n        type: \"favoritesList\",\n        children: provided => {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            className: \"favoList\",\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [list === null || list === void 0 ? void 0 : list.map((video, index) => {\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: video.id.videoId,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"favorite-preview flex\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", { ...provided.dragHandleProps,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"video-img\",\n                      src: video.snippet.thumbnails.medium.url,\n                      alt: \"img-video\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"video-content flex column\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: video.snippet.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 56,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: video.snippet.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 57,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"btn-div\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 58,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 45\n                }, this) // <div  {...provided.draggableProps} ref={provided.innerRef}  >\n                //     <FavoritePreview\n                //         key={video.id.videoId}\n                //         provided={provided}\n                //         video={video}\n                //         deleteFromList={deleteFromList}\n                //         setCurrVideo={setCurrVideo} />\n                // </div>\n\n              }, video.id.videoId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this);\n            }), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FavoritesList, \"Ledwi6kaY9k+oDHaH8+yyYxwox8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FavoritesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesList\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/cmps/FavoritesList.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","deleteVideo","setVideo","videoService","FavoritePreview","DragDropContext","Draggable","Droppable","FavoritesList","favorites","state","listModule","list","setlist","dispatch","console","log","loadFavorites","queryFavorites","setCurrVideo","ev","video","stopPropagation","deleteFromList","newList","deleteFromFavorites","id","handleDragEnd","res","provided","droppableProps","innerRef","map","index","videoId","dragHandleProps","snippet","thumbnails","medium","url","title","description","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteVideo, setVideo } from '../actions/ListAction'\nimport { videoService } from '../services/videoService'\nimport { FavoritePreview } from './FavoritePreview'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\n\n\nexport function FavoritesList() {\n    const { favorites } = useSelector(state => state.listModule)\n    const [list, setlist] = useState([])\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        console.log('im loading');\n        loadFavorites()\n    }, [favorites])\n\n\n    async function loadFavorites() {\n        const favorites = await videoService.queryFavorites()\n        setlist(favorites)\n\n\n    }\n\n    function setCurrVideo(ev, video) {\n        ev.stopPropagation()\n        dispatch(setVideo(video))\n    }\n\n    const deleteFromList = (ev, video) => {\n        ev.stopPropagation()\n        deleteVideo(video)\n        const newList = videoService.deleteFromFavorites(list, video.id)\n        setlist(newList)\n    }\n    const handleDragEnd = res => {\n        console.log('res is:', res);\n    }\n    console.log('list is:', list);\n    return (\n        <section>\n            <DragDropContext onDragEnd={handleDragEnd}>\n                <Droppable droppableId=\"favoList\" type=\"favoritesList\">\n                    {(provided) => {\n                        <div className=\"favoList\" {...provided.droppableProps} ref={provided.innerRef} >\n                            {list?.map((video, index) => {\n                                return (\n                                    <Draggable key={video.id.videoId} draggableId={video.id.videoId} index={index}>\n                                        {(provided) => (\n                                            <div className=\"favorite-preview flex\" >\n                                                <div {...provided.dragHandleProps}>\n                                                    <img className=\"video-img\" src={video.snippet.thumbnails.medium.url} alt=\"img-video\" />\n                                                    <div className=\"video-content flex column\" >\n                                                        <h4>{video.snippet.title}</h4>\n                                                        <p>{video.snippet.description}</p>\n                                                        <div className=\"btn-div\">\n                                                            {/* <button className=\"play\" onClick={(ev) => playCurrVideo(ev, video)}>Play</button> */}\n                                                            {/* <button className=\"delete\" onClick={(ev) => deleteFromList(ev, video)}>Delete</button> */}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            // <div  {...provided.draggableProps} ref={provided.innerRef}  >\n                                            //     <FavoritePreview\n                                            //         key={video.id.videoId}\n                                            //         provided={provided}\n                                            //         video={video}\n                                            //         deleteFromList={deleteFromList}\n                                            //         setCurrVideo={setCurrVideo} />\n                                            // </div>\n                                        )}\n                                    </Draggable>\n                                )\n                            })}\n                            {provided.placeholder}\n                        </div>\n                    }}\n                </Droppable>\n            </DragDropContext>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}