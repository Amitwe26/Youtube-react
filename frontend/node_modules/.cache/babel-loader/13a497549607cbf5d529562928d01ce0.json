{"ast":null,"code":"import axios from \"axios\";\nimport { storageService } from './storageService.js';\nconst VIDEOS_KEY = 'video';\nconst KEYWORD_KEY = 'keyword';\nconst FAVORITES_LIST = 'favoritesList';\nconst BASE_URL = 'http://localhost:3030/favorites';\nexport const videoService = {\n  query,\n  chackIsFavorites,\n  historylist,\n  deleteFromFavorites,\n  queryFavorites,\n  saveVideoToFavorites,\n  removeVideo,\n  updateFavoritesList\n};\n\nasync function query(keyword) {\n  console.log('keyword is:', keyword); // var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n  // if (keyword === '' && !storageKeyword) keyword = 'Angular'\n  // if (keyword === storageKeyword || keyword === '') {\n  //     return storageService.loadFromStorage(VIDEOS_KEY)\n  // }\n  // var listFromStorge = storageService.loadFromStorage(keyword)\n  // return listFromStorge\n\n  const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n  const videos = res.data;\n  storageService.saveToStorage(VIDEOS_KEY, videos);\n  storageService.saveToStorage(KEYWORD_KEY, keyword);\n  return videos;\n}\n\nasync function queryFavorites(filterBy) {\n  try {\n    const res = await axios.get(BASE_URL);\n    const favorites = res.data;\n\n    if (filterBy) {\n      const newFavorites = {\n        id: favorites.id,\n        list: []\n      };\n      const filterRegex = new RegExp(filterBy.name, 'i');\n      newFavorites.list = favorites.list.filter(favorite => filterRegex.test(favorite.snippet.title));\n      storageService.saveToStorage(FAVORITES_LIST, newFavorites);\n      return newFavorites;\n    }\n\n    storageService.saveToStorage(FAVORITES_LIST, favorites);\n    return favorites;\n  } catch {\n    console.log('soryyy i cant to query favorites');\n  }\n}\n\nasync function updateFavoritesList(favorites) {\n  try {\n    const res = await axios.put(`${BASE_URL}`, favorites);\n    return res.data;\n  } catch (err) {\n    console.log('err is:', err);\n  }\n}\n\nfunction chackIsFavorites(favoritesList, videoToChack) {\n  var _favoritesList$list;\n\n  console.log('favortiesList is:', favoritesList, videoToChack);\n  const isFavorites = (_favoritesList$list = favoritesList.list) === null || _favoritesList$list === void 0 ? void 0 : _favoritesList$list.some(video => {\n    var _videoToChack$id;\n\n    return video.id.videoId === ((_videoToChack$id = videoToChack.id) === null || _videoToChack$id === void 0 ? void 0 : _videoToChack$id.videoId);\n  });\n  if (isFavorites) return true;else return false;\n}\n\nasync function saveVideoToFavorites(video) {\n  video.favorite = true;\n  const res = await axios.post(BASE_URL, video);\n  return res.data;\n}\n\nfunction deleteFromFavorites(favorites, videoId) {\n  const idx = favorites.list.findIndex(video => video.id.videoId === videoId.videoId);\n  favorites.list[idx].favorite = false;\n  favorites.list.splice(idx, 1);\n  return favorites;\n}\n\nasync function removeVideo(video) {\n  try {\n    const res = await axios.delete(`${BASE_URL}/${video.id.videoId}`);\n    return res.data;\n  } catch {\n    console.log('soryyy');\n  }\n}\n\nfunction historylist(history, video) {\n  var copy = [...history];\n  copy.push(video);\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/services/videoService.js"],"names":["axios","storageService","VIDEOS_KEY","KEYWORD_KEY","FAVORITES_LIST","BASE_URL","videoService","query","chackIsFavorites","historylist","deleteFromFavorites","queryFavorites","saveVideoToFavorites","removeVideo","updateFavoritesList","keyword","console","log","res","get","videos","data","saveToStorage","filterBy","favorites","newFavorites","id","list","filterRegex","RegExp","name","filter","favorite","test","snippet","title","put","err","favoritesList","videoToChack","isFavorites","some","video","videoId","post","idx","findIndex","splice","delete","history","copy","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { storageService } from './storageService.js'\n\nconst VIDEOS_KEY = 'video'\nconst KEYWORD_KEY = 'keyword'\nconst FAVORITES_LIST = 'favoritesList'\n\nconst BASE_URL = 'http://localhost:3030/favorites';\nexport const videoService = {\n    query,\n    chackIsFavorites,\n    historylist,\n    deleteFromFavorites,\n    queryFavorites,\n    saveVideoToFavorites,\n    removeVideo,\n    updateFavoritesList\n}\n\nasync function query(keyword) {\n    console.log('keyword is:', keyword);\n    // var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n    // if (keyword === '' && !storageKeyword) keyword = 'Angular'\n\n    // if (keyword === storageKeyword || keyword === '') {\n    //     return storageService.loadFromStorage(VIDEOS_KEY)\n    // }\n    // var listFromStorge = storageService.loadFromStorage(keyword)\n\n    // return listFromStorge\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n    const videos = res.data;\n    storageService.saveToStorage(VIDEOS_KEY, videos)\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\n    return videos;\n}\nasync function queryFavorites(filterBy) {\n\n    try {\n        const res = await axios.get(BASE_URL);\n        const favorites = res.data;\n        if (filterBy) {\n            const newFavorites = { id: favorites.id, list: [] }\n            const filterRegex = new RegExp(filterBy.name, 'i');\n            newFavorites.list = favorites.list.filter(favorite => filterRegex.test(favorite.snippet.title));\n\n            storageService.saveToStorage(FAVORITES_LIST, newFavorites)\n            return newFavorites\n        }\n        storageService.saveToStorage(FAVORITES_LIST, favorites)\n        return favorites;\n    } catch {\n        console.log('soryyy i cant to query favorites');\n    }\n\n}\nasync function updateFavoritesList(favorites) {\n    try {\n        const res = await axios.put(`${BASE_URL}`, favorites)\n        return res.data\n    } catch (err) {\n        console.log('err is:', err);\n    }\n}\nfunction chackIsFavorites(favoritesList, videoToChack) {\n    console.log('favortiesList is:', favoritesList, videoToChack);\n    const isFavorites = favoritesList.list?.some(video => video.id.videoId === videoToChack.id?.videoId)\n    if (isFavorites) return true\n    else return false\n}\n\nasync function saveVideoToFavorites(video) {\n    video.favorite = true\n    const res = await axios.post(BASE_URL, video);\n    return res.data;\n}\n\nfunction deleteFromFavorites(favorites, videoId) {\n    const idx = favorites.list.findIndex(video => video.id.videoId === videoId.videoId)\n    favorites.list[idx].favorite = false\n    favorites.list.splice(idx, 1)\n    return favorites\n}\n\nasync function removeVideo(video) {\n    try {\n        const res = await axios.delete(`${BASE_URL}/${video.id.videoId}`)\n        return res.data\n    }\n    catch {\n        console.log('soryyy');\n    }\n}\n\nfunction historylist(history, video) {\n    var copy = [...history]\n    copy.push(video)\n}\n\n"]},"metadata":{},"sourceType":"module"}