{"ast":null,"code":"import axios from \"axios\";\nimport { storageService } from './storageService.js';\nconst VIDEOS_KEY = 'video';\nconst KEYWORD_KEY = 'keyword'; // const FAVORITES_VIDEOS = 'favorites'\n\nconst BASE_URL = 'http://localhost:3030/favorites';\nexport const videoService = {\n  query,\n  chackIsFavorites,\n  historylist,\n  deleteFromFavorites,\n  queryFavorites,\n  saveVideoToFavorites,\n  removeVideo\n};\n\nasync function query(keyword) {\n  console.log('keyword is:', keyword);\n  var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY);\n  if (keyword === '' && !storageKeyword) keyword = 'Angular';\n\n  if (keyword === storageKeyword || keyword === '') {\n    return storageService.loadFromStorage(VIDEOS_KEY);\n  } // var listFromStorge = storageService.loadFromStorage(keyword)\n  // return listFromStorge\n\n\n  const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n  const videos = res.data;\n  storageService.saveToStorage(VIDEOS_KEY, videos);\n  storageService.saveToStorage(KEYWORD_KEY, keyword);\n  return videos;\n}\n\nasync function queryFavorites() {\n  try {\n    const res = await axios.get(BASE_URL);\n    const favorites = res.data;\n    storageService.saveToStorage('favoritesList', favorites);\n    return favorites;\n  } catch {\n    console.log('soryyy i cant to query favorites');\n  }\n}\n\nfunction chackIsFavorites(list, video) {\n  const videoId = video.id;\n  const isFavorites = list.some(video => video.id === videoId);\n\n  if (isFavorites) {\n    console.log('isFavorites is:', isFavorites); // const newList = deleteFromFavorites(list, videoId)\n    // console.log('newList is:', newList);\n    // storageService.saveToStorage(FAVORITES_VIDEOS, newList)\n    // return newList\n  } else return false;\n}\n\nasync function saveVideoToFavorites(video) {\n  console.log('video in save front is:', video);\n  video.favorite = true;\n  const res = await axios.post(BASE_URL, video);\n  return res.data;\n}\n\nfunction deleteFromFavorites(list, videoId) {\n  const idx = list.findIndex(video => video.id === videoId);\n  console.log('idx is:', idx);\n  list[idx].favorite = false;\n  list.splice(idx, 1);\n  return list;\n}\n\nasync function removeVideo(video) {\n  try {\n    console.log('video is:', video);\n    const res = axios.delete(`${BASE_URL}/${video.id}`);\n    return res.data;\n  } catch {\n    console.log('soryyy');\n  }\n}\n\nfunction historylist(history, video) {\n  var copy = [...history];\n  console.log('copy is:', copy);\n  copy.push(video);\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/services/videoService.js"],"names":["axios","storageService","VIDEOS_KEY","KEYWORD_KEY","BASE_URL","videoService","query","chackIsFavorites","historylist","deleteFromFavorites","queryFavorites","saveVideoToFavorites","removeVideo","keyword","console","log","storageKeyword","loadFromStorage","res","get","videos","data","saveToStorage","favorites","list","video","videoId","id","isFavorites","some","favorite","post","idx","findIndex","splice","delete","history","copy","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { storageService } from './storageService.js'\n\nconst VIDEOS_KEY = 'video'\nconst KEYWORD_KEY = 'keyword'\n// const FAVORITES_VIDEOS = 'favorites'\n\nconst BASE_URL = 'http://localhost:3030/favorites';\nexport const videoService = {\n    query,\n    chackIsFavorites,\n    historylist,\n    deleteFromFavorites,\n    queryFavorites,\n    saveVideoToFavorites,\n    removeVideo\n}\n\nasync function query(keyword) {\n    console.log('keyword is:', keyword);\n    var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n    if (keyword === '' && !storageKeyword) keyword = 'Angular'\n\n    if (keyword === storageKeyword || keyword === '') {\n        return storageService.loadFromStorage(VIDEOS_KEY)\n    }\n    // var listFromStorge = storageService.loadFromStorage(keyword)\n\n    // return listFromStorge\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n    const videos = res.data;\n    storageService.saveToStorage(VIDEOS_KEY, videos)\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\n    return videos;\n}\nasync function queryFavorites() {\n    try {\n        const res = await axios.get(BASE_URL);\n        const favorites = res.data;\n        storageService.saveToStorage('favoritesList', favorites)\n        return favorites;\n    } catch {\n        console.log('soryyy i cant to query favorites');\n    }\n\n}\n\nfunction chackIsFavorites(list, video) {\n    const videoId = video.id\n    const isFavorites = list.some(video => video.id === videoId)\n    if (isFavorites) {\n        console.log('isFavorites is:', isFavorites);\n        // const newList = deleteFromFavorites(list, videoId)\n        // console.log('newList is:', newList);\n        // storageService.saveToStorage(FAVORITES_VIDEOS, newList)\n        // return newList\n    }\n    else return false\n}\n\nasync function saveVideoToFavorites(video) {\n    console.log('video in save front is:', video);\n    video.favorite = true\n    const res = await axios.post(BASE_URL, video);\n    return res.data;\n}\n\nfunction deleteFromFavorites(list, videoId) {\n    const idx = list.findIndex(video => video.id === videoId)\n    console.log('idx is:', idx);\n    list[idx].favorite = false\n    list.splice(idx, 1)\n    return list\n}\n\nasync function removeVideo(video) {\n    try {\n        console.log('video is:', video);\n        const res = axios.delete(`${BASE_URL}/${video.id}`)\n        return res.data\n    }\n    catch {\n        console.log('soryyy');\n    }\n}\n\nfunction historylist(history, video) {\n    var copy = [...history]\n    console.log('copy is:', copy);\n    copy.push(video)\n}\n\n"]},"metadata":{},"sourceType":"module"}