{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/cmps/FavoritesList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useSelector } from 'react-redux'\n\nimport { deleteVideo } from '../actions/ListAction';\nimport { videoService } from '../services/videoService';\nimport { FavoritePreview } from './FavoritePreview';\nexport function FavoritesList({\n  setCurrVideo\n}) {\n  _s();\n\n  // const { favorites } = useSelector(state => state.listModule)\n  const [list, setlist] = useState([]);\n  useEffect(() => {\n    loadFavorites();\n  }, []);\n\n  async function loadFavorites() {\n    console.log('hey');\n    const favorites = await videoService.queryFavorites();\n    console.log('favorites is:', favorites);\n    setlist(favorites);\n  }\n\n  const deleteFromList = (ev, video) => {\n    ev.stopPropagation();\n    deleteVideo(video);\n  }; // if (!favorites) return <div>Dont have Favorites video </div>\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list.map(video => {\n      return /*#__PURE__*/_jsxDEV(FavoritePreview, {\n        deleteFromList: deleteFromList,\n        video: video,\n        setCurrVideo: setCurrVideo\n      }, video.id.videoId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FavoritesList, \"NTaMcWV3rT3u8c7lZieJCrV4MVg=\");\n\n_c = FavoritesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesList\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/cmps/FavoritesList.jsx"],"names":["React","useEffect","useState","deleteVideo","videoService","FavoritePreview","FavoritesList","setCurrVideo","list","setlist","loadFavorites","console","log","favorites","queryFavorites","deleteFromList","ev","video","stopPropagation","map","id","videoId"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAO,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAyC;AAAA;;AAC5C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAKA,iBAAeA,aAAf,GAA+B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,UAAMC,SAAS,GAAG,MAAMT,YAAY,CAACU,cAAb,EAAxB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,SAA7B;AACAJ,IAAAA,OAAO,CAACI,SAAD,CAAP;AACH;;AACD,QAAME,cAAc,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AAClCD,IAAAA,EAAE,CAACE,eAAH;AACAf,IAAAA,WAAW,CAACc,KAAD,CAAX;AACH,GAHD,CAf4C,CAoB5C;;;AACA,sBACI;AAAA,cACKT,IAAI,CAACW,GAAL,CAASF,KAAK,IAAI;AACf,0BAAO,QAAC,eAAD;AAAwC,QAAA,cAAc,EAAEF,cAAxD;AAAwE,QAAA,KAAK,EAAEE,KAA/E;AAAsF,QAAA,YAAY,EAAEV;AAApG,SAAsBU,KAAK,CAACG,EAAN,CAASC,OAA/B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA/Bef,a;;KAAAA,a","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useSelector } from 'react-redux'\nimport { deleteVideo } from '../actions/ListAction'\nimport { videoService } from '../services/videoService'\nimport { FavoritePreview } from './FavoritePreview'\n\nexport function FavoritesList({ setCurrVideo }) {\n    // const { favorites } = useSelector(state => state.listModule)\n    const [list, setlist] = useState([])\n\n    useEffect(() => {\n        loadFavorites()\n    }, [])\n\n\n    async function loadFavorites() {\n        console.log('hey');\n        const favorites = await videoService.queryFavorites()\n        console.log('favorites is:', favorites);\n        setlist(favorites)\n    }\n    const deleteFromList = (ev, video) => {\n        ev.stopPropagation()\n        deleteVideo(video)\n    }\n\n    // if (!favorites) return <div>Dont have Favorites video </div>\n    return (\n        <div>\n            {list.map(video => {\n                return <FavoritePreview key={video.id.videoId} deleteFromList={deleteFromList} video={video} setCurrVideo={setCurrVideo} />\n            })}\n            {/* {favorites.map(video => {\n                return <FavoritePreview key={video.id.videoId} video={video} setCurrVideo={setCurrVideo} />\n            })} */}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}