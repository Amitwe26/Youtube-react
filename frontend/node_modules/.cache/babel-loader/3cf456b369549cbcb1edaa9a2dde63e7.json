{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/myPlaylist/src/pages/Play.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectedVideo } from '../cmps/SelectedVideo';\nimport { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService';\nimport { saveVideo, setVideosList, updateFavorites } from '../actions/ListAction';\nimport { storageService } from '../services/storageService';\nexport function Play() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [video, setVideo] = useState({});\n  const {\n    list,\n    favorites\n  } = useSelector(state => state.listModule); // const [lastVideo, setLastVideo] = useState({})\n\n  useEffect(() => {\n    const loadFromSession = storageService.loadSession('lastVideo');\n    const keyword = storageService.loadFromStorage('keyword');\n\n    if (loadFromSession) {\n      console.log('video in side is:', loadFromSession);\n      setVideo(loadFromSession);\n      dispatch(setVideosList(keyword));\n    }\n  }, [dispatch]);\n\n  const setCurrVideo = video => {\n    // dispatch(setVideo(video.id.videoId))\n    console.log('video is:', video);\n    setVideo(video);\n    storageService.saveSession('lastVideo', video);\n  };\n\n  const saveToFavorites = video => {\n    console.log('video is:', video);\n    const newFavoritesList = videoService.chackIsFavorites(favorites, video);\n\n    if (newFavoritesList) {\n      console.log('is favorite', newFavoritesList);\n      dispatch(updateFavorites(newFavoritesList));\n    } else {\n      const newVideo = video;\n      newVideo.favorite = true;\n      dispatch(saveVideo(newVideo));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-app flex\",\n    children: [/*#__PURE__*/_jsxDEV(VideoList, {\n      list: list,\n      setCurrVideo: setCurrVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectedVideo, {\n      video: video,\n      saveToFavorites: saveToFavorites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Play, \"+UjvaFDnhwsUj9131vShVARJc0o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/myPlaylist/src/pages/Play.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","SelectedVideo","VideoList","videoService","saveVideo","setVideosList","updateFavorites","storageService","Play","dispatch","video","setVideo","list","favorites","state","listModule","loadFromSession","loadSession","keyword","loadFromStorage","console","log","setCurrVideo","saveSession","saveToFavorites","newFavoritesList","chackIsFavorites","newVideo","favorite"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,eAAnC,QAA0D,uBAA1D;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAvC,CAHmB,CAInB;;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,eAAe,GAAGT,cAAc,CAACU,WAAf,CAA2B,WAA3B,CAAxB;AACA,UAAMC,OAAO,GAAGX,cAAc,CAACY,eAAf,CAA+B,SAA/B,CAAhB;;AACA,QAAIH,eAAJ,EAAqB;AACjBI,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,eAAjC;AACAL,MAAAA,QAAQ,CAACK,eAAD,CAAR;AACAP,MAAAA,QAAQ,CAACJ,aAAa,CAACa,OAAD,CAAd,CAAR;AAEH;AAEJ,GAVQ,EAUN,CAACT,QAAD,CAVM,CAAT;;AAaA,QAAMa,YAAY,GAAIZ,KAAD,IAAW;AAC5B;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,KAAzB;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAH,IAAAA,cAAc,CAACgB,WAAf,CAA2B,WAA3B,EAAwCb,KAAxC;AAEH,GAND;;AAQA,QAAMc,eAAe,GAAId,KAAD,IAAW;AAC/BU,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,KAAzB;AACA,UAAMe,gBAAgB,GAAGtB,YAAY,CAACuB,gBAAb,CAA8Bb,SAA9B,EAAyCH,KAAzC,CAAzB;;AACA,QAAIe,gBAAJ,EAAsB;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,gBAA3B;AACAhB,MAAAA,QAAQ,CAACH,eAAe,CAACmB,gBAAD,CAAhB,CAAR;AACH,KAHD,MAGO;AACH,YAAME,QAAQ,GAAGjB,KAAjB;AACAiB,MAAAA,QAAQ,CAACC,QAAT,GAAoB,IAApB;AACAnB,MAAAA,QAAQ,CAACL,SAAS,CAACuB,QAAD,CAAV,CAAR;AACH;AACJ,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEf,IAAjB;AAAuB,MAAA,YAAY,EAAEU;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEZ,KAAtB;AAA6B,MAAA,eAAe,EAAEc;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA9CehB,I;UACKT,W,EAEWC,W;;;KAHhBQ,I","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectedVideo } from '../cmps/SelectedVideo';\nimport { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService';\nimport { saveVideo, setVideosList, updateFavorites } from '../actions/ListAction'\nimport { storageService } from '../services/storageService';\n\nexport function Play() {\n    const dispatch = useDispatch()\n    const [video, setVideo] = useState({})\n    const { list, favorites } = useSelector(state => state.listModule)\n    // const [lastVideo, setLastVideo] = useState({})\n\n    useEffect(() => {\n        const loadFromSession = storageService.loadSession('lastVideo')\n        const keyword = storageService.loadFromStorage('keyword')\n        if (loadFromSession) {\n            console.log('video in side is:', loadFromSession);\n            setVideo(loadFromSession)\n            dispatch(setVideosList(keyword))\n\n        }\n\n    }, [dispatch])\n\n\n    const setCurrVideo = (video) => {\n        // dispatch(setVideo(video.id.videoId))\n        console.log('video is:', video);\n        setVideo(video)\n        storageService.saveSession('lastVideo', video)\n\n    }\n\n    const saveToFavorites = (video) => {\n        console.log('video is:', video);\n        const newFavoritesList = videoService.chackIsFavorites(favorites, video)\n        if (newFavoritesList) {\n            console.log('is favorite', newFavoritesList);\n            dispatch(updateFavorites(newFavoritesList))\n        } else {\n            const newVideo = video\n            newVideo.favorite = true\n            dispatch(saveVideo(newVideo))\n        }\n    }\n\n    return (\n        <div className=\"video-app flex\">\n            <VideoList list={list} setCurrVideo={setCurrVideo} />\n            <SelectedVideo video={video} saveToFavorites={saveToFavorites} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}