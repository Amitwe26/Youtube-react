{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/cmps/FavoritesList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteVideo, setVideo, updateFavorites } from '../actions/ListAction';\nimport { videoService } from '../services/videoService';\nimport { FavoritePreview } from './FavoritePreview';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nexport function FavoritesList() {\n  _s();\n\n  const {\n    favorites\n  } = useSelector(state => state.listModule);\n  const [list, setlist] = useState([]);\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    loadFavorites();\n  }, [favorites]);\n\n  async function loadFavorites() {\n    // if (!favorites) {\n    //     const listFromStorge = await storageService.loadFromStorage('favoritesList')\n    //     console.log('listFromStorge is:', listFromStorge);\n    //     setlist(listFromStorge)\n    // } else {\n    const favorites = await videoService.queryFavorites();\n    setlist(favorites); // }\n  }\n\n  function setCurrVideo(ev, video) {\n    console.log('video is:', video);\n    ev.stopPropagation();\n    dispatch(setVideo(video));\n  }\n\n  const deleteFromList = (ev, video) => {\n    ev.stopPropagation();\n    dispatch(deleteVideo(video));\n    const newList = videoService.deleteFromFavorites(list, video.id);\n    setlist(newList);\n  };\n\n  const handleDragEnd = res => {\n    const {\n      destination,\n      source,\n      type\n    } = res;\n    const updateList = { ...list\n    };\n    if (!destination) return;\n\n    if (type === 'favorite') {\n      const from = source.index;\n      const to = destination.index;\n\n      const newList = _reorder(updateList, from, to);\n\n      setlist(newList);\n      console.log('newList ko and list is:', newList, list);\n      dispatch(updateFavorites(newList));\n    }\n  };\n\n  const _reorder = (updateList, sourceIdx, destIdx) => {\n    const favoritesList = {};\n    favoritesList.id = updateList.id;\n    favoritesList.list = Array.from(updateList.list);\n    const [removedItem] = favoritesList.list.splice(sourceIdx, 1);\n    favoritesList.list.splice(destIdx, 0, removedItem);\n    return favoritesList;\n  };\n\n  const filterList = word => {\n    if (filter) {\n      const regexName = new RegExp(word, 'i');\n      console.log('regexName is:', regexName); // const filterlist =favorites.filter(favorite=>{\n      // })\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"favorites\",\n        type: \"favorite\",\n        children: provided => {\n          var _list$list;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favorites\",\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search your video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), (_list$list = list.list) === null || _list$list === void 0 ? void 0 : _list$list.map((video, index) => {\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: video.id.videoId,\n                index: index,\n                children: provided => {\n                  return /*#__PURE__*/_jsxDEV(FavoritePreview, {\n                    provided: provided,\n                    video: video,\n                    deleteFromList: deleteFromList,\n                    setCurrVideo: setCurrVideo\n                  }, video.id.videoId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this);\n                }\n              }, video.id.videoId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this);\n            }), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FavoritesList, \"NzjgT724D6ZKHGmpPQjErddL95M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FavoritesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesList\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/cmps/FavoritesList.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","deleteVideo","setVideo","updateFavorites","videoService","FavoritePreview","DragDropContext","Draggable","Droppable","FavoritesList","favorites","state","listModule","list","setlist","filter","setFilter","dispatch","loadFavorites","queryFavorites","setCurrVideo","ev","video","console","log","stopPropagation","deleteFromList","newList","deleteFromFavorites","id","handleDragEnd","res","destination","source","type","updateList","from","index","to","_reorder","sourceIdx","destIdx","favoritesList","Array","removedItem","splice","filterList","word","regexName","RegExp","provided","droppableProps","innerRef","map","videoId","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteVideo, setVideo, updateFavorites } from '../actions/ListAction'\nimport { videoService } from '../services/videoService'\nimport { FavoritePreview } from './FavoritePreview'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\n\n\nexport function FavoritesList() {\n    const { favorites } = useSelector(state => state.listModule)\n    const [list, setlist] = useState([])\n    const [filter, setFilter] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        loadFavorites()\n    }, [favorites])\n\n\n    async function loadFavorites() {\n        // if (!favorites) {\n        //     const listFromStorge = await storageService.loadFromStorage('favoritesList')\n        //     console.log('listFromStorge is:', listFromStorge);\n        //     setlist(listFromStorge)\n        // } else {\n        const favorites = await videoService.queryFavorites()\n\n        setlist(favorites)\n        // }\n\n    }\n\n    function setCurrVideo(ev, video) {\n        console.log('video is:', video);\n        ev.stopPropagation()\n        dispatch(setVideo(video))\n    }\n\n    const deleteFromList = (ev, video) => {\n        ev.stopPropagation()\n        dispatch(deleteVideo(video))\n        const newList = videoService.deleteFromFavorites(list, video.id)\n        setlist(newList)\n    }\n\n    const handleDragEnd = res => {\n        const { destination, source, type } = res\n        const updateList = { ...list }\n        if (!destination) return;\n        if (type === 'favorite') {\n            const from = source.index\n            const to = destination.index\n            const newList = _reorder(updateList, from, to)\n            setlist(newList);\n            console.log('newList ko and list is:', newList, list);\n            dispatch(updateFavorites(newList))\n        }\n    }\n\n    const _reorder = (updateList, sourceIdx, destIdx) => {\n        const favoritesList = {}\n        favoritesList.id = updateList.id\n        favoritesList.list = Array.from(updateList.list);\n        const [removedItem] = favoritesList.list.splice(sourceIdx, 1);\n        favoritesList.list.splice(destIdx, 0, removedItem);\n\n        return favoritesList;\n    }\n\n    const filterList = (word) => {\n        if (filter) {\n            const regexName = new RegExp(word, 'i')\n            console.log('regexName is:', regexName);\n            // const filterlist =favorites.filter(favorite=>{\n\n            // })\n        }\n    }\n\n    return (\n        <section>\n            <DragDropContext onDragEnd={handleDragEnd}>\n                <Droppable droppableId=\"favorites\" type=\"favorite\">\n                    {(provided) => (\n                        <div className=\"favorites\" {...provided.droppableProps} ref={provided.innerRef} >\n                            <input type=\"text\" placeholder=\"Search your video\" />\n                            {list.list?.map((video, index) => {\n                                return (\n                                    <Draggable key={video.id.videoId} draggableId={video.id.videoId} index={index}>\n                                        {(provided) => {\n                                            return (\n                                                <FavoritePreview\n                                                    key={video.id.videoId}\n                                                    provided={provided}\n                                                    video={video}\n                                                    deleteFromList={deleteFromList}\n                                                    setCurrVideo={setCurrVideo} />\n                                            )\n                                        }}\n                                    </Draggable>\n                                )\n                            })}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}