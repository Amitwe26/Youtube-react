{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/pages/Play.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectedVideo } from '../cmps/SelectedVideo';\nimport { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService';\nimport { saveVideo, setVideo, setVideosList, updateFavorites } from '../actions/ListAction';\nimport { storageService } from '../services/storageService';\nexport function Play() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    video,\n    list,\n    favorites\n  } = useSelector(state => state.listModule);\n  useEffect(() => {\n    const loadFromSession = storageService.loadSession('lastVideo');\n    const keyword = storageService.loadFromStorage('keyword');\n\n    async function getFavorites() {// const favoritesVideos = await videoService.queryFavorites()\n      // dispatch(updateFavorites(favoritesVideos))\n    }\n\n    if (loadFromSession) {\n      setVideo(loadFromSession);\n      dispatch(setVideosList(keyword));\n      getFavorites();\n    }\n  }, [dispatch, video]);\n\n  const setCurrVideo = video => {\n    dispatch(setVideo(video));\n    storageService.saveSession('lastVideo', video);\n  };\n\n  const saveToFavorites = video => {\n    const newFavoritesList = videoService.chackIsFavorites(favorites, video);\n\n    if (newFavoritesList) {\n      const newList = videoService.deleteFromFavorites(favorites, video.id);\n      dispatch(updateFavorites(newList, video));\n    } else {\n      const newVideo = video;\n      dispatch(saveVideo(newVideo));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-app flex\",\n    children: [/*#__PURE__*/_jsxDEV(VideoList, {\n      list: list,\n      setCurrVideo: setCurrVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectedVideo, {\n      video: video,\n      saveToFavorites: saveToFavorites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Play, \"NbWBibOaSXOOxdzc6OoqdVdnXX8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/pages/Play.jsx"],"names":["React","useEffect","useDispatch","useSelector","SelectedVideo","VideoList","videoService","saveVideo","setVideo","setVideosList","updateFavorites","storageService","Play","dispatch","video","list","favorites","state","listModule","loadFromSession","loadSession","keyword","loadFromStorage","getFavorites","setCurrVideo","saveSession","saveToFavorites","newFavoritesList","chackIsFavorites","newList","deleteFromFavorites","id","newVideo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,aAA9B,EAA6CC,eAA7C,QAAoE,uBAApE;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAA6Bb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAA9C;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,eAAe,GAAGR,cAAc,CAACS,WAAf,CAA2B,WAA3B,CAAxB;AACA,UAAMC,OAAO,GAAGV,cAAc,CAACW,eAAf,CAA+B,SAA/B,CAAhB;;AAEA,mBAAeC,YAAf,GAA8B,CAC1B;AACA;AAEH;;AACD,QAAIJ,eAAJ,EAAqB;AACjBX,MAAAA,QAAQ,CAACW,eAAD,CAAR;AACAN,MAAAA,QAAQ,CAACJ,aAAa,CAACY,OAAD,CAAd,CAAR;AACAE,MAAAA,YAAY;AACf;AACJ,GAdQ,EAcN,CAACV,QAAD,EAAWC,KAAX,CAdM,CAAT;;AAkBA,QAAMU,YAAY,GAAIV,KAAD,IAAW;AAC5BD,IAAAA,QAAQ,CAACL,QAAQ,CAACM,KAAD,CAAT,CAAR;AACAH,IAAAA,cAAc,CAACc,WAAf,CAA2B,WAA3B,EAAwCX,KAAxC;AAEH,GAJD;;AAMA,QAAMY,eAAe,GAAIZ,KAAD,IAAW;AAC/B,UAAMa,gBAAgB,GAAGrB,YAAY,CAACsB,gBAAb,CAA8BZ,SAA9B,EAAyCF,KAAzC,CAAzB;;AACA,QAAIa,gBAAJ,EAAsB;AAClB,YAAME,OAAO,GAAGvB,YAAY,CAACwB,mBAAb,CAAiCd,SAAjC,EAA4CF,KAAK,CAACiB,EAAlD,CAAhB;AACAlB,MAAAA,QAAQ,CAACH,eAAe,CAACmB,OAAD,EAAUf,KAAV,CAAhB,CAAR;AACH,KAHD,MAGO;AACH,YAAMkB,QAAQ,GAAGlB,KAAjB;AACAD,MAAAA,QAAQ,CAACN,SAAS,CAACyB,QAAD,CAAV,CAAR;AACH;AACJ,GATD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEjB,IAAjB;AAAuB,MAAA,YAAY,EAAES;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEV,KAAtB;AAA6B,MAAA,eAAe,EAAEY;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA9Ced,I;UACKV,W,EACkBC,W;;;KAFvBS,I","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectedVideo } from '../cmps/SelectedVideo';\nimport { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService';\nimport { saveVideo, setVideo, setVideosList, updateFavorites } from '../actions/ListAction'\nimport { storageService } from '../services/storageService';\n\nexport function Play() {\n    const dispatch = useDispatch()\n    const { video, list, favorites } = useSelector(state => state.listModule)\n\n    useEffect(() => {\n        const loadFromSession = storageService.loadSession('lastVideo')\n        const keyword = storageService.loadFromStorage('keyword')\n\n        async function getFavorites() {\n            // const favoritesVideos = await videoService.queryFavorites()\n            // dispatch(updateFavorites(favoritesVideos))\n\n        }\n        if (loadFromSession) {\n            setVideo(loadFromSession)\n            dispatch(setVideosList(keyword))\n            getFavorites()\n        }\n    }, [dispatch, video])\n\n\n\n    const setCurrVideo = (video) => {\n        dispatch(setVideo(video))\n        storageService.saveSession('lastVideo', video)\n\n    }\n\n    const saveToFavorites = (video) => {\n        const newFavoritesList = videoService.chackIsFavorites(favorites, video)\n        if (newFavoritesList) {\n            const newList = videoService.deleteFromFavorites(favorites, video.id)\n            dispatch(updateFavorites(newList, video))\n        } else {\n            const newVideo = video\n            dispatch(saveVideo(newVideo))\n        }\n    }\n\n\n    return (\n        <div className=\"video-app flex\">\n            <VideoList list={list} setCurrVideo={setCurrVideo} />\n            <SelectedVideo video={video} saveToFavorites={saveToFavorites} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}