{"ast":null,"code":"import axios from \"axios\";\nimport { storageService } from './storageService.js';\nconst VIDEOS_KEY = 'video';\nconst KEYWORD_KEY = 'keyword';\nexport const videoService = {\n  query,\n  chackIsFavorites,\n  historylist\n};\n\nasync function query(keyword) {\n  var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY);\n  if (keyword === '' && !storageKeyword) keyword = 'Angular';\n\n  if (keyword === storageKeyword || keyword === '') {\n    return storageService.loadFromStorage(VIDEOS_KEY);\n  } // var listFromStorge = storageService.loadFromStorage(keyword)\n  // return listFromStorge\n\n\n  const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n  const videos = res.data;\n  storageService.saveToStorage(VIDEOS_KEY, videos);\n  storageService.saveToStorage(KEYWORD_KEY, keyword);\n  return videos;\n}\n\nfunction chackIsFavorites(list, videoId) {\n  // const list = storageService.loadFromStorage(VIDEOS_KEY)\n  const isFavorites = list.some(video => video.id === videoId);\n  if (isFavorites) return true;else return false; // return Promise.resolve(video)\n}\n\nfunction historylist(history, video) {\n  var copy = [...history];\n  console.log('copy is:', copy);\n  copy.push(video);\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/myPlaylist/src/services/videoService.js"],"names":["axios","storageService","VIDEOS_KEY","KEYWORD_KEY","videoService","query","chackIsFavorites","historylist","keyword","storageKeyword","loadFromStorage","res","get","videos","data","saveToStorage","list","videoId","isFavorites","some","video","id","history","copy","console","log","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,MAAMC,UAAU,GAAG,OAAnB;AACA,MAAMC,WAAW,GAAG,SAApB;AAGA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KADwB;AAExBC,EAAAA,gBAFwB;AAGxBC,EAAAA;AAHwB,CAArB;;AAMP,eAAeF,KAAf,CAAqBG,OAArB,EAA8B;AAC1B,MAAIC,cAAc,GAAGR,cAAc,CAACS,eAAf,CAA+BP,WAA/B,CAArB;AACA,MAAIK,OAAO,KAAK,EAAZ,IAAkB,CAACC,cAAvB,EAAuCD,OAAO,GAAG,SAAV;;AAEvC,MAAIA,OAAO,KAAKC,cAAZ,IAA8BD,OAAO,KAAK,EAA9C,EAAkD;AAC9C,WAAOP,cAAc,CAACS,eAAf,CAA+BR,UAA/B,CAAP;AACH,GANyB,CAO1B;AAEA;;;AACA,QAAMS,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,4FAA2FJ,OAAQ,8CAA9G,CAAlB;AACA,QAAMK,MAAM,GAAGF,GAAG,CAACG,IAAnB;AACAb,EAAAA,cAAc,CAACc,aAAf,CAA6Bb,UAA7B,EAAyCW,MAAzC;AACAZ,EAAAA,cAAc,CAACc,aAAf,CAA6BZ,WAA7B,EAA0CK,OAA1C;AACA,SAAOK,MAAP;AACH;;AAED,SAASP,gBAAT,CAA0BU,IAA1B,EAAgCC,OAAhC,EAAyC;AACrC;AAEA,QAAMC,WAAW,GAAGF,IAAI,CAACG,IAAL,CAAUC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaJ,OAAhC,CAApB;AACA,MAAIC,WAAJ,EAAiB,OAAO,IAAP,CAAjB,KACK,OAAO,KAAP,CALgC,CAMrC;AACH;;AAED,SAASX,WAAT,CAAqBe,OAArB,EAA8BF,KAA9B,EAAqC;AACjC,MAAIG,IAAI,GAAG,CAAC,GAAGD,OAAJ,CAAX;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACAA,EAAAA,IAAI,CAACG,IAAL,CAAUN,KAAV;AACH","sourcesContent":["import axios from \"axios\";\nimport { storageService } from './storageService.js'\n\nconst VIDEOS_KEY = 'video'\nconst KEYWORD_KEY = 'keyword'\n\n\nexport const videoService = {\n    query,\n    chackIsFavorites,\n    historylist\n}\n\nasync function query(keyword) {\n    var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n    if (keyword === '' && !storageKeyword) keyword = 'Angular'\n\n    if (keyword === storageKeyword || keyword === '') {\n        return storageService.loadFromStorage(VIDEOS_KEY)\n    }\n    // var listFromStorge = storageService.loadFromStorage(keyword)\n\n    // return listFromStorge\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n    const videos = res.data;\n    storageService.saveToStorage(VIDEOS_KEY, videos)\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\n    return videos;\n}\n\nfunction chackIsFavorites(list, videoId) {\n    // const list = storageService.loadFromStorage(VIDEOS_KEY)\n\n    const isFavorites = list.some(video => video.id === videoId)\n    if (isFavorites) return true\n    else return false\n    // return Promise.resolve(video)\n}\n\nfunction historylist(history, video) {\n    var copy = [...history]\n    console.log('copy is:', copy);\n    copy.push(video)\n}\n\n"]},"metadata":{},"sourceType":"module"}