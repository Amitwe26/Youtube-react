{"ast":null,"code":"import axios from \"axios\";\nimport { storageService } from './storageService.js';\nconst VIDEOS_KEY = 'video';\nconst KEYWORD_KEY = 'keyword';\nconst FAVORITES_LIST = 'favoritesList';\nconst BASE_URL = 'http://localhost:3030/favorites';\nexport const videoService = {\n  query,\n  chackIsFavorites,\n  historylist,\n  deleteFromFavorites,\n  queryFavorites,\n  saveVideoToFavorites,\n  removeVideo,\n  updateFavoritesList\n};\n\nasync function query(keyword) {\n  console.log('keyword is:', keyword); // var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n  // if (keyword === '' && !storageKeyword) keyword = 'Angular'\n  // if (keyword === storageKeyword || keyword === '') {\n  //     return storageService.loadFromStorage(VIDEOS_KEY)\n  // }\n  // var listFromStorge = storageService.loadFromStorage(keyword)\n  // return listFromStorge\n\n  const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n  const videos = res.data;\n  storageService.saveToStorage(VIDEOS_KEY, videos);\n  storageService.saveToStorage(KEYWORD_KEY, keyword);\n  return videos;\n}\n\nasync function queryFavorites() {\n  try {\n    const res = await axios.get(BASE_URL);\n    const favorites = res.data;\n    storageService.saveToStorage(FAVORITES_LIST, favorites.list);\n    return favorites;\n  } catch {\n    console.log('soryyy i cant to query favorites');\n  }\n}\n\nasync function updateFavoritesList(favorites) {\n  try {\n    console.log('amit im here', favorites);\n    const res = await axios.put(`${BASE_URL}`, favorites);\n    console.log('res after axios is:', res);\n  } catch (err) {\n    console.log('err is:', err);\n  }\n}\n\nfunction chackIsFavorites(list, videoToChack) {\n  const isFavorites = list.some(video => {\n    var _videoToChack$id;\n\n    return video.id.videoId === ((_videoToChack$id = videoToChack.id) === null || _videoToChack$id === void 0 ? void 0 : _videoToChack$id.videoId);\n  });\n  if (isFavorites) return true;else return false;\n}\n\nasync function saveVideoToFavorites(video) {\n  video.favorite = true;\n  const res = await axios.post(BASE_URL, video);\n  return res.data;\n}\n\nfunction deleteFromFavorites(list, videoId) {\n  const idx = list.findIndex(video => video.id.videoId === videoId.videoId);\n  list[idx].favorite = false;\n  list.splice(idx, 1);\n  return list;\n}\n\nasync function removeVideo(video) {\n  try {\n    const res = await axios.delete(`${BASE_URL}/${video.id.videoId}`);\n    return res.data;\n  } catch {\n    console.log('soryyy');\n  }\n}\n\nfunction historylist(history, video) {\n  var copy = [...history];\n  copy.push(video);\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/services/videoService.js"],"names":["axios","storageService","VIDEOS_KEY","KEYWORD_KEY","FAVORITES_LIST","BASE_URL","videoService","query","chackIsFavorites","historylist","deleteFromFavorites","queryFavorites","saveVideoToFavorites","removeVideo","updateFavoritesList","keyword","console","log","res","get","videos","data","saveToStorage","favorites","list","put","err","videoToChack","isFavorites","some","video","id","videoId","favorite","post","idx","findIndex","splice","delete","history","copy","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { storageService } from './storageService.js'\n\nconst VIDEOS_KEY = 'video'\nconst KEYWORD_KEY = 'keyword'\nconst FAVORITES_LIST = 'favoritesList'\n\nconst BASE_URL = 'http://localhost:3030/favorites';\nexport const videoService = {\n    query,\n    chackIsFavorites,\n    historylist,\n    deleteFromFavorites,\n    queryFavorites,\n    saveVideoToFavorites,\n    removeVideo,\n    updateFavoritesList\n}\n\nasync function query(keyword) {\n    console.log('keyword is:', keyword);\n    // var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n    // if (keyword === '' && !storageKeyword) keyword = 'Angular'\n\n    // if (keyword === storageKeyword || keyword === '') {\n    //     return storageService.loadFromStorage(VIDEOS_KEY)\n    // }\n    // var listFromStorge = storageService.loadFromStorage(keyword)\n\n    // return listFromStorge\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n    const videos = res.data;\n    storageService.saveToStorage(VIDEOS_KEY, videos)\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\n    return videos;\n}\nasync function queryFavorites() {\n    try {\n        const res = await axios.get(BASE_URL);\n        const favorites = res.data;\n        storageService.saveToStorage(FAVORITES_LIST, favorites.list)\n        return favorites;\n    } catch {\n        console.log('soryyy i cant to query favorites');\n    }\n\n}\nasync function updateFavoritesList(favorites) {\n    try {\n        console.log('amit im here', favorites);\n        const res = await axios.put(`${BASE_URL}`, favorites)\n        console.log('res after axios is:', res);\n    } catch (err) {\n        console.log('err is:', err);\n    }\n}\nfunction chackIsFavorites(list, videoToChack) {\n    const isFavorites = list.some(video => video.id.videoId === videoToChack.id?.videoId)\n    if (isFavorites) return true\n    else return false\n}\n\nasync function saveVideoToFavorites(video) {\n    video.favorite = true\n    const res = await axios.post(BASE_URL, video);\n    return res.data;\n}\n\nfunction deleteFromFavorites(list, videoId) {\n    const idx = list.findIndex(video => video.id.videoId === videoId.videoId)\n    list[idx].favorite = false\n    list.splice(idx, 1)\n    return list\n}\n\nasync function removeVideo(video) {\n    try {\n        const res = await axios.delete(`${BASE_URL}/${video.id.videoId}`)\n        return res.data\n    }\n    catch {\n        console.log('soryyy');\n    }\n}\n\nfunction historylist(history, video) {\n    var copy = [...history]\n    copy.push(video)\n}\n\n"]},"metadata":{},"sourceType":"module"}