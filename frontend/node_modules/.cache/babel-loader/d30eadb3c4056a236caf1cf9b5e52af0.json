{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/myPlaylist/src/pages/VideoApp.jsx\",\n    _s = $RefreshSig$();\n\nimport { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService.js';\nimport { useEffect, useState } from 'react';\nimport { EmbeddedVideo } from '../cmps/EmbeddedVideo';\nimport { NavBar } from '../cmps/NavBar';\nexport function VideoApp() {\n  _s();\n\n  const [keyword, setKeyword] = useState('');\n  const [video, setVideo] = useState('');\n\n  const setCurrVideo = video => {\n    setVideo(video);\n  };\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {// loadVideos()\n    // if (videoList.length) setCurrVideo(videoList[0])\n  }, []);\n\n  async function loadVideos(ev = null) {\n    if (ev) ev.preventDefault();\n    const results = await videoService.query(keyword);\n    setVideos(results.items);\n    return results.items;\n  } // const loadVideos = async (ev = null) => {\n  //     if (ev)\n  //         ev.preventDefault();\n  //     const results = await videoService.query(keyword)\n  //     setVideos(results.items)\n  //     return results.items\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Youtube player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: ev => loadVideos(ev),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          value: keyword,\n          placeholder: \"Search\",\n          onChange: ev => setKeyword(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-app flex\",\n      children: [/*#__PURE__*/_jsxDEV(VideoList, {\n        videos: videos,\n        setCurrVideo: setCurrVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EmbeddedVideo, {\n        video: video\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VideoApp, \"Lwx6+M81rG05D3GQj6MvKH+ODpc=\");\n\n_c = VideoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoApp\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/myPlaylist/src/pages/VideoApp.jsx"],"names":["VideoList","videoService","useEffect","useState","EmbeddedVideo","NavBar","VideoApp","keyword","setKeyword","video","setVideo","setCurrVideo","videos","setVideos","loadVideos","ev","preventDefault","results","query","items","target","value"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMQ,YAAY,GAAIF,KAAD,IAAW;AAC5BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAFD;;AAIA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeY,UAAf,CAA0BC,EAAE,GAAG,IAA/B,EAAqC;AACjC,QAAIA,EAAJ,EACIA,EAAE,CAACC,cAAH;AACJ,UAAMC,OAAO,GAAG,MAAMhB,YAAY,CAACiB,KAAb,CAAmBX,OAAnB,CAAtB;AACAM,IAAAA,SAAS,CAACI,OAAO,CAACE,KAAT,CAAT;AAEA,WAAOF,OAAO,CAACE,KAAf;AACH,GArBsB,CAsBvB;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,sBACI;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,QAAQ,EAAGJ,EAAD,IAAQD,UAAU,CAACC,EAAD,CAAlC;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAER,OAA5B;AAAqC,UAAA,WAAW,EAAC,QAAjD;AAA0D,UAAA,QAAQ,EAAGQ,EAAD,IAAQP,UAAU,CAACO,EAAE,CAACK,MAAH,CAAUC,KAAX;AAAtF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAET,MAAnB;AAA2B,QAAA,YAAY,EAAED;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA9CeH,Q;;KAAAA,Q","sourcesContent":["import { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService.js'\nimport { useEffect, useState } from 'react';\nimport { EmbeddedVideo } from '../cmps/EmbeddedVideo';\nimport { NavBar } from '../cmps/NavBar';\n\nexport function VideoApp() {\n    const [keyword, setKeyword] = useState('')\n    const [video, setVideo] = useState('')\n    const setCurrVideo = (video) => {\n        setVideo(video)\n    }\n\n    const [videos, setVideos] = useState([])\n\n    useEffect(() => {\n        // loadVideos()\n        // if (videoList.length) setCurrVideo(videoList[0])\n    }, [])\n\n    async function loadVideos(ev = null) {\n        if (ev)\n            ev.preventDefault();\n        const results = await videoService.query(keyword)\n        setVideos(results.items)\n\n        return results.items\n    }\n    // const loadVideos = async (ev = null) => {\n    //     if (ev)\n    //         ev.preventDefault();\n    //     const results = await videoService.query(keyword)\n    //     setVideos(results.items)\n\n    //     return results.items\n    // }\n    return (\n        <section>\n            <header className=\"app-header\">\n                <h1>Youtube player</h1>\n                <NavBar />\n                <form onSubmit={(ev) => loadVideos(ev)}>\n                    <input type=\"search\" value={keyword} placeholder=\"Search\" onChange={(ev) => setKeyword(ev.target.value)} />\n                    <button>Search</button>\n                </form>\n            </header>\n            <div className=\"video-app flex\">\n                <VideoList videos={videos} setCurrVideo={setCurrVideo} />\n                <EmbeddedVideo video={video} />\n            </div>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}