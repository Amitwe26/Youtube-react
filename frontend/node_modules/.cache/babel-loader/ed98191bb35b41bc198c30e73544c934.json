{"ast":null,"code":"import axios from \"axios\";\nimport { storageService } from './storageService.js';\nconst VIDEOS_KEY = 'video';\nconst KEYWORD_KEY = 'keyword';\nexport const videoService = {\n  query,\n  chackIsFavorites,\n  historylist,\n  deleteFromFavorites\n};\n\nasync function query(keyword) {\n  var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY);\n  if (keyword === '' && !storageKeyword) keyword = 'Angular';\n\n  if (keyword === storageKeyword || keyword === '') {\n    return storageService.loadFromStorage(VIDEOS_KEY);\n  } // var listFromStorge = storageService.loadFromStorage(keyword)\n  // return listFromStorge\n\n\n  const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n  const videos = res.data;\n  storageService.saveToStorage(VIDEOS_KEY, videos);\n  storageService.saveToStorage(KEYWORD_KEY, keyword);\n  return videos;\n}\n\nfunction chackIsFavorites(list, video) {\n  // const list = storageService.loadFromStorage(VIDEOS_KEY)\n  const videoId = video.id;\n  const isFavorites = list.some(video => video.id === videoId);\n\n  if (isFavorites) {\n    deleteFromFavorites(list, videoId);\n    return true;\n  } else return false; // return Promise.resolve(video)\n\n}\n\nfunction deleteFromFavorites(list, videoId) {\n  const idx = list.findIndex(video => video.id === videoId);\n  console.log('idx is:', idx);\n}\n\nfunction historylist(history, video) {\n  var copy = [...history];\n  console.log('copy is:', copy);\n  copy.push(video);\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/myPlaylist/src/services/videoService.js"],"names":["axios","storageService","VIDEOS_KEY","KEYWORD_KEY","videoService","query","chackIsFavorites","historylist","deleteFromFavorites","keyword","storageKeyword","loadFromStorage","res","get","videos","data","saveToStorage","list","video","videoId","id","isFavorites","some","idx","findIndex","console","log","history","copy","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,MAAMC,UAAU,GAAG,OAAnB;AACA,MAAMC,WAAW,GAAG,SAApB;AAGA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,KADwB;AAExBC,EAAAA,gBAFwB;AAGxBC,EAAAA,WAHwB;AAIxBC,EAAAA;AAJwB,CAArB;;AAOP,eAAeH,KAAf,CAAqBI,OAArB,EAA8B;AAC1B,MAAIC,cAAc,GAAGT,cAAc,CAACU,eAAf,CAA+BR,WAA/B,CAArB;AACA,MAAIM,OAAO,KAAK,EAAZ,IAAkB,CAACC,cAAvB,EAAuCD,OAAO,GAAG,SAAV;;AAEvC,MAAIA,OAAO,KAAKC,cAAZ,IAA8BD,OAAO,KAAK,EAA9C,EAAkD;AAC9C,WAAOR,cAAc,CAACU,eAAf,CAA+BT,UAA/B,CAAP;AACH,GANyB,CAO1B;AAEA;;;AACA,QAAMU,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,4FAA2FJ,OAAQ,8CAA9G,CAAlB;AACA,QAAMK,MAAM,GAAGF,GAAG,CAACG,IAAnB;AACAd,EAAAA,cAAc,CAACe,aAAf,CAA6Bd,UAA7B,EAAyCY,MAAzC;AACAb,EAAAA,cAAc,CAACe,aAAf,CAA6Bb,WAA7B,EAA0CM,OAA1C;AACA,SAAOK,MAAP;AACH;;AAED,SAASR,gBAAT,CAA0BW,IAA1B,EAAgCC,KAAhC,EAAuC;AACnC;AACA,QAAMC,OAAO,GAAGD,KAAK,CAACE,EAAtB;AAEA,QAAMC,WAAW,GAAGJ,IAAI,CAACK,IAAL,CAAUJ,KAAK,IAAIA,KAAK,CAACE,EAAN,KAAaD,OAAhC,CAApB;;AACA,MAAIE,WAAJ,EAAiB;AACbb,IAAAA,mBAAmB,CAACS,IAAD,EAAOE,OAAP,CAAnB;AACA,WAAO,IAAP;AACH,GAHD,MAIK,OAAO,KAAP,CAT8B,CAUnC;;AACH;;AAED,SAASX,mBAAT,CAA6BS,IAA7B,EAAmCE,OAAnC,EAA4C;AACxC,QAAMI,GAAG,GAAGN,IAAI,CAACO,SAAL,CAAeN,KAAK,IAAIA,KAAK,CAACE,EAAN,KAAaD,OAArC,CAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,GAAvB;AACH;;AAED,SAAShB,WAAT,CAAqBoB,OAArB,EAA8BT,KAA9B,EAAqC;AACjC,MAAIU,IAAI,GAAG,CAAC,GAAGD,OAAJ,CAAX;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,IAAxB;AACAA,EAAAA,IAAI,CAACC,IAAL,CAAUX,KAAV;AACH","sourcesContent":["import axios from \"axios\";\nimport { storageService } from './storageService.js'\n\nconst VIDEOS_KEY = 'video'\nconst KEYWORD_KEY = 'keyword'\n\n\nexport const videoService = {\n    query,\n    chackIsFavorites,\n    historylist,\n    deleteFromFavorites\n}\n\nasync function query(keyword) {\n    var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n    if (keyword === '' && !storageKeyword) keyword = 'Angular'\n\n    if (keyword === storageKeyword || keyword === '') {\n        return storageService.loadFromStorage(VIDEOS_KEY)\n    }\n    // var listFromStorge = storageService.loadFromStorage(keyword)\n\n    // return listFromStorge\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n    const videos = res.data;\n    storageService.saveToStorage(VIDEOS_KEY, videos)\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\n    return videos;\n}\n\nfunction chackIsFavorites(list, video) {\n    // const list = storageService.loadFromStorage(VIDEOS_KEY)\n    const videoId = video.id\n\n    const isFavorites = list.some(video => video.id === videoId)\n    if (isFavorites) {\n        deleteFromFavorites(list, videoId)\n        return true\n    }\n    else return false\n    // return Promise.resolve(video)\n}\n\nfunction deleteFromFavorites(list, videoId) {\n    const idx = list.findIndex(video => video.id === videoId)\n    console.log('idx is:', idx);\n}\n\nfunction historylist(history, video) {\n    var copy = [...history]\n    console.log('copy is:', copy);\n    copy.push(video)\n}\n\n"]},"metadata":{},"sourceType":"module"}