{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/cmps/FavoritesList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteVideo, setVideo, updateFavorites } from '../actions/ListAction';\nimport { videoService } from '../services/videoService';\nimport { FavoritePreview } from './FavoritePreview';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nexport function FavoritesList() {\n  _s();\n\n  const {\n    favorites\n  } = useSelector(state => state.listModule);\n  const [list, setlist] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log('im loading');\n    loadFavorites();\n  }, [favorites]);\n\n  async function loadFavorites() {\n    const favorites = await videoService.queryFavorites();\n    setlist(favorites);\n  }\n\n  function setCurrVideo(ev, video) {\n    ev.stopPropagation();\n    dispatch(setVideo(video));\n  }\n\n  const deleteFromList = (ev, video) => {\n    ev.stopPropagation();\n    deleteVideo(video);\n    const newList = videoService.deleteFromFavorites(list, video.id);\n    setlist(newList);\n  };\n\n  const handleDragEnd = res => {\n    const {\n      destination,\n      source,\n      type\n    } = res;\n    if (!destination) return;\n\n    if (type === 'favorite') {\n      const from = source.index;\n      const to = destination.index;\n      console.log('befor is:', list);\n\n      const newList = _reorder(from, to);\n\n      setlist(newList);\n      console.log('newList is:', newList);\n      dispatch(updateFavorites(newList));\n    }\n  };\n\n  const _reorder = (sourceIdx, destIdx) => {\n    const items = Array.from(list);\n    const [removedItem] = items.splice(sourceIdx, 1);\n    items.splice(destIdx, 0, removedItem);\n    return items;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"favorites\",\n        type: \"favorite\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [list === null || list === void 0 ? void 0 : list.map((video, index) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: video.id.videoId,\n              index: index,\n              children: provided => {\n                return /*#__PURE__*/_jsxDEV(FavoritePreview, {\n                  provided: provided,\n                  video: video,\n                  deleteFromList: deleteFromList,\n                  setCurrVideo: setCurrVideo\n                }, video.id.videoId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 49\n                }, this);\n              }\n            }, video.id.videoId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this);\n          }), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FavoritesList, \"Ledwi6kaY9k+oDHaH8+yyYxwox8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FavoritesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesList\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/cmps/FavoritesList.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","deleteVideo","setVideo","updateFavorites","videoService","FavoritePreview","DragDropContext","Draggable","Droppable","FavoritesList","favorites","state","listModule","list","setlist","dispatch","console","log","loadFavorites","queryFavorites","setCurrVideo","ev","video","stopPropagation","deleteFromList","newList","deleteFromFavorites","id","handleDragEnd","res","destination","source","type","from","index","to","_reorder","sourceIdx","destIdx","items","Array","removedItem","splice","provided","droppableProps","innerRef","map","videoId","placeholder"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,eAAhC,QAAuD,uBAAvD;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AAGA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAgBV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAjC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMiB,QAAQ,GAAGhB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAC,IAAAA,aAAa;AAChB,GAHQ,EAGN,CAACR,SAAD,CAHM,CAAT;;AAMA,iBAAeQ,aAAf,GAA+B;AAC3B,UAAMR,SAAS,GAAG,MAAMN,YAAY,CAACe,cAAb,EAAxB;AACAL,IAAAA,OAAO,CAACJ,SAAD,CAAP;AAGH;;AAED,WAASU,YAAT,CAAsBC,EAAtB,EAA0BC,KAA1B,EAAiC;AAC7BD,IAAAA,EAAE,CAACE,eAAH;AACAR,IAAAA,QAAQ,CAACb,QAAQ,CAACoB,KAAD,CAAT,CAAR;AACH;;AAED,QAAME,cAAc,GAAG,CAACH,EAAD,EAAKC,KAAL,KAAe;AAClCD,IAAAA,EAAE,CAACE,eAAH;AACAtB,IAAAA,WAAW,CAACqB,KAAD,CAAX;AACA,UAAMG,OAAO,GAAGrB,YAAY,CAACsB,mBAAb,CAAiCb,IAAjC,EAAuCS,KAAK,CAACK,EAA7C,CAAhB;AACAb,IAAAA,OAAO,CAACW,OAAD,CAAP;AACH,GALD;;AAMA,QAAMG,aAAa,GAAGC,GAAG,IAAI;AACzB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,MAAf;AAAuBC,MAAAA;AAAvB,QAAgCH,GAAtC;AACA,QAAI,CAACC,WAAL,EAAkB;;AAClB,QAAIE,IAAI,KAAK,UAAb,EAAyB;AACrB,YAAMC,IAAI,GAAGF,MAAM,CAACG,KAApB;AACA,YAAMC,EAAE,GAAGL,WAAW,CAACI,KAAvB;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,IAAzB;;AAEA,YAAMY,OAAO,GAAGW,QAAQ,CAACH,IAAD,EAAOE,EAAP,CAAxB;;AACArB,MAAAA,OAAO,CAACW,OAAD,CAAP;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BQ,OAA3B;AAEAV,MAAAA,QAAQ,CAACZ,eAAe,CAACsB,OAAD,CAAhB,CAAR;AACH;AACJ,GAdD;;AAgBA,QAAMW,QAAQ,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACrC,UAAMC,KAAK,GAAGC,KAAK,CAACP,IAAN,CAAWpB,IAAX,CAAd;AACA,UAAM,CAAC4B,WAAD,IAAgBF,KAAK,CAACG,MAAN,CAAaL,SAAb,EAAwB,CAAxB,CAAtB;AACAE,IAAAA,KAAK,CAACG,MAAN,CAAaJ,OAAb,EAAsB,CAAtB,EAAyBG,WAAzB;AACA,WAAOF,KAAP;AACH,GALD;;AAQA,sBACI;AAAA,2BACI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEX,aAA5B;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,WAAvB;AAAmC,QAAA,IAAI,EAAC,UAAxC;AAAA,kBACMe,QAAD,iBACG;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,aAA+BA,QAAQ,CAACC,cAAxC;AAAwD,UAAA,GAAG,EAAED,QAAQ,CAACE,QAAtE;AAAA,qBACKhC,IADL,aACKA,IADL,uBACKA,IAAI,CAAEiC,GAAN,CAAU,CAACxB,KAAD,EAAQY,KAAR,KAAkB;AACzB,gCACI,QAAC,SAAD;AAAkC,cAAA,WAAW,EAAEZ,KAAK,CAACK,EAAN,CAASoB,OAAxD;AAAiE,cAAA,KAAK,EAAEb,KAAxE;AAAA,wBACMS,QAAD,IAAc;AACX,oCACI,QAAC,eAAD;AAEI,kBAAA,QAAQ,EAAEA,QAFd;AAGI,kBAAA,KAAK,EAAErB,KAHX;AAII,kBAAA,cAAc,EAAEE,cAJpB;AAKI,kBAAA,YAAY,EAAEJ;AALlB,mBACSE,KAAK,CAACK,EAAN,CAASoB,OADlB;AAAA;AAAA;AAAA;AAAA,wBADJ;AAQH;AAVL,eAAgBzB,KAAK,CAACK,EAAN,CAASoB,OAAzB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAcH,WAfA,CADL,EAiBKJ,QAAQ,CAACK,WAjBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAlFevC,a;UACUT,W,EAELD,W;;;KAHLU,a","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteVideo, setVideo, updateFavorites } from '../actions/ListAction'\nimport { videoService } from '../services/videoService'\nimport { FavoritePreview } from './FavoritePreview'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\n\n\nexport function FavoritesList() {\n    const { favorites } = useSelector(state => state.listModule)\n    const [list, setlist] = useState([])\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        console.log('im loading');\n        loadFavorites()\n    }, [favorites])\n\n\n    async function loadFavorites() {\n        const favorites = await videoService.queryFavorites()\n        setlist(favorites)\n\n\n    }\n\n    function setCurrVideo(ev, video) {\n        ev.stopPropagation()\n        dispatch(setVideo(video))\n    }\n\n    const deleteFromList = (ev, video) => {\n        ev.stopPropagation()\n        deleteVideo(video)\n        const newList = videoService.deleteFromFavorites(list, video.id)\n        setlist(newList)\n    }\n    const handleDragEnd = res => {\n        const { destination, source, type } = res\n        if (!destination) return;\n        if (type === 'favorite') {\n            const from = source.index\n            const to = destination.index\n            console.log('befor is:', list);\n\n            const newList = _reorder(from, to)\n            setlist(newList);\n            console.log('newList is:', newList);\n\n            dispatch(updateFavorites(newList))\n        }\n    }\n\n    const _reorder = (sourceIdx, destIdx) => {\n        const items = Array.from(list);\n        const [removedItem] = items.splice(sourceIdx, 1);\n        items.splice(destIdx, 0, removedItem);\n        return items;\n    }\n\n\n    return (\n        <section>\n            <DragDropContext onDragEnd={handleDragEnd}>\n                <Droppable droppableId=\"favorites\" type=\"favorite\">\n                    {(provided) => (\n                        <div className=\"favorites\" {...provided.droppableProps} ref={provided.innerRef} >\n                            {list?.map((video, index) => {\n                                return (\n                                    <Draggable key={video.id.videoId} draggableId={video.id.videoId} index={index}>\n                                        {(provided) => {\n                                            return (\n                                                <FavoritePreview\n                                                    key={video.id.videoId}\n                                                    provided={provided}\n                                                    video={video}\n                                                    deleteFromList={deleteFromList}\n                                                    setCurrVideo={setCurrVideo} />\n                                            )\n                                        }}\n                                    </Draggable>\n                                )\n                            })}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}