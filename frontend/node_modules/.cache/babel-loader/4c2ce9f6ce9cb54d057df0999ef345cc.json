{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amit/Desktop/Dev/Simples/myPlaylist/src/pages/Play.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EmbeddedVideo } from '../cmps/EmbeddedVideo';\nimport { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService';\nimport { saveVideo, updateFavorites } from '../actions/ListAction';\nimport { Toolbar } from '../cmps/Toolbar';\nexport function Play() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [video, setVideo] = useState({});\n  const {\n    list,\n    favorites\n  } = useSelector(state => state.listModule);\n  const [menu, setMenu] = useState(true);\n  const [favoritesList, setFavoritesList] = useState(false);\n\n  const setCurrVideo = video => {\n    // dispatch(setVideo(video.id.videoId))\n    setVideo(video);\n  };\n\n  const saveToFavorites = video => {\n    const newFavoritesList = videoService.chackIsFavorites(favorites, video);\n\n    if (newFavoritesList) {\n      console.log('is favorite', newFavoritesList);\n      dispatch(updateFavorites(newFavoritesList));\n    } else {\n      const newVideo = video;\n      newVideo.favorite = true;\n      dispatch(saveVideo(newVideo));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-app flex\",\n    children: [menu && /*#__PURE__*/_jsxDEV(Toolbar, {\n      setFavoritesList: setFavoritesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n      list: list,\n      setCurrVideo: setCurrVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmbeddedVideo, {\n      video: video,\n      saveToFavorites: saveToFavorites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Play, \"mfxpUGAxh9SmbWkDNoBeVjkKzVw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/myPlaylist/src/pages/Play.jsx"],"names":["React","useState","useDispatch","useSelector","EmbeddedVideo","VideoList","videoService","saveVideo","updateFavorites","Toolbar","Play","dispatch","video","setVideo","list","favorites","state","listModule","menu","setMenu","favoritesList","setFavoritesList","setCurrVideo","saveToFavorites","newFavoritesList","chackIsFavorites","console","log","newVideo","favorite"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,uBAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAvC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMqB,YAAY,GAAIV,KAAD,IAAW;AAC5B;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AAEH,GAJD;;AAMA,QAAMW,eAAe,GAAIX,KAAD,IAAW;AAC/B,UAAMY,gBAAgB,GAAGlB,YAAY,CAACmB,gBAAb,CAA8BV,SAA9B,EAAyCH,KAAzC,CAAzB;;AACA,QAAIY,gBAAJ,EAAsB;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,gBAA3B;AACAb,MAAAA,QAAQ,CAACH,eAAe,CAACgB,gBAAD,CAAhB,CAAR;AACH,KAHD,MAGO;AACH,YAAMI,QAAQ,GAAGhB,KAAjB;AACAgB,MAAAA,QAAQ,CAACC,QAAT,GAAoB,IAApB;AACAlB,MAAAA,QAAQ,CAACJ,SAAS,CAACqB,QAAD,CAAV,CAAR;AACH;AACJ,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACKV,IAAI,iBAAI,QAAC,OAAD;AACL,MAAA,gBAAgB,EAAEG;AADb;AAAA;AAAA;AAAA;AAAA,YADb,eAII,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEP,IAAjB;AAAuB,MAAA,YAAY,EAAEQ;AAArC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEV,KAAtB;AAA6B,MAAA,eAAe,EAAEW;AAA9C;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAlCeb,I;UACKR,W,EAEWC,W;;;KAHhBO,I","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EmbeddedVideo } from '../cmps/EmbeddedVideo';\nimport { VideoList } from '../cmps/VideoList';\nimport { videoService } from '../services/videoService';\nimport { saveVideo, updateFavorites } from '../actions/ListAction'\nimport { Toolbar } from '../cmps/Toolbar';\n\nexport function Play() {\n    const dispatch = useDispatch()\n    const [video, setVideo] = useState({})\n    const { list, favorites } = useSelector(state => state.listModule)\n    const [menu, setMenu] = useState(true)\n    const [favoritesList, setFavoritesList] = useState(false)\n\n    const setCurrVideo = (video) => {\n        // dispatch(setVideo(video.id.videoId))\n        setVideo(video)\n\n    }\n\n    const saveToFavorites = (video) => {\n        const newFavoritesList = videoService.chackIsFavorites(favorites, video)\n        if (newFavoritesList) {\n            console.log('is favorite', newFavoritesList);\n            dispatch(updateFavorites(newFavoritesList))\n        } else {\n            const newVideo = video\n            newVideo.favorite = true\n            dispatch(saveVideo(newVideo))\n        }\n    }\n\n    return (\n        <div className=\"video-app flex\">\n            {menu && <Toolbar\n                setFavoritesList={setFavoritesList}\n            />}\n            <VideoList list={list} setCurrVideo={setCurrVideo} />\n            <EmbeddedVideo video={video} saveToFavorites={saveToFavorites} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}