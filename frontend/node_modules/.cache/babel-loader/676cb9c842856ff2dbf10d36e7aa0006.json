{"ast":null,"code":"import axios from \"axios\";\nimport { storageService } from './storageService.js';\nconst VIDEOS_KEY = 'video';\nconst KEYWORD_KEY = 'keyword';\nconst FAVORITES_VIDEOS = 'favorites';\nconst BASE_URL = 'http://localhost:3030/api/favorites';\nexport const videoService = {\n  query,\n  chackIsFavorites,\n  historylist,\n  deleteFromFavorites,\n  queryFavorites,\n  saveVideoToFavorites\n};\n\nasync function query(keyword) {\n  console.log('keyword is:', keyword);\n  var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY);\n  if (keyword === '' && !storageKeyword) keyword = 'Angular';\n\n  if (keyword === storageKeyword || keyword === '') {\n    return storageService.loadFromStorage(VIDEOS_KEY);\n  } // var listFromStorge = storageService.loadFromStorage(keyword)\n  // return listFromStorge\n\n\n  const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n  const videos = res.data;\n  storageService.saveToStorage(VIDEOS_KEY, videos);\n  storageService.saveToStorage(KEYWORD_KEY, keyword);\n  return videos;\n}\n\nasync function queryFavorites() {\n  const favoFromStorge = storageService.loadFromStorage(FAVORITES_VIDEOS);\n  if (favoFromStorge) return Promise.resolve(favoFromStorge);else {\n    try {\n      const res = await axios.get(BASE_URL);\n      const favorites = res.data;\n      return favorites;\n    } catch {\n      console.log('soryyy');\n    }\n  }\n}\n\nfunction chackIsFavorites(list, video) {\n  const videoId = video.id;\n  const isFavorites = list.some(video => video.id === videoId);\n\n  if (isFavorites) {\n    const newList = deleteFromFavorites(list, videoId);\n    console.log('newList is:', newList);\n    storageService.saveToStorage(FAVORITES_VIDEOS, newList);\n    return newList;\n  } else return false; // return Promise.resolve(video)\n\n}\n\nasync function saveVideoToFavorites(video) {\n  console.log('video in save front is:', video);\n  video.favorite = true;\n  const res = await axios.post(BASE_URL, video);\n  return res.data;\n}\n\nfunction deleteFromFavorites(list, videoId) {\n  const idx = list.findIndex(video => video.id === videoId);\n  console.log('idx is:', idx);\n  list[idx].favorite = false;\n  list.splice(idx, 1);\n  return list;\n}\n\nfunction historylist(history, video) {\n  var copy = [...history];\n  console.log('copy is:', copy);\n  copy.push(video);\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/services/videoService.js"],"names":["axios","storageService","VIDEOS_KEY","KEYWORD_KEY","FAVORITES_VIDEOS","BASE_URL","videoService","query","chackIsFavorites","historylist","deleteFromFavorites","queryFavorites","saveVideoToFavorites","keyword","console","log","storageKeyword","loadFromStorage","res","get","videos","data","saveToStorage","favoFromStorge","Promise","resolve","favorites","list","video","videoId","id","isFavorites","some","newList","favorite","post","idx","findIndex","splice","history","copy","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { storageService } from './storageService.js'\n\nconst VIDEOS_KEY = 'video'\nconst KEYWORD_KEY = 'keyword'\nconst FAVORITES_VIDEOS = 'favorites'\n\nconst BASE_URL = 'http://localhost:3030/api/favorites';\nexport const videoService = {\n    query,\n    chackIsFavorites,\n    historylist,\n    deleteFromFavorites,\n    queryFavorites,\n    saveVideoToFavorites\n}\n\nasync function query(keyword) {\n    console.log('keyword is:', keyword);\n    var storageKeyword = storageService.loadFromStorage(KEYWORD_KEY)\n    if (keyword === '' && !storageKeyword) keyword = 'Angular'\n\n    if (keyword === storageKeyword || keyword === '') {\n        return storageService.loadFromStorage(VIDEOS_KEY)\n    }\n    // var listFromStorge = storageService.loadFromStorage(keyword)\n\n    // return listFromStorge\n    const res = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&type=video&q=${keyword}&key=AIzaSyCKuaufnbpG6KWdX28y4gBz43wMxdjEa54`);\n    const videos = res.data;\n    storageService.saveToStorage(VIDEOS_KEY, videos)\n    storageService.saveToStorage(KEYWORD_KEY, keyword)\n    return videos;\n}\nasync function queryFavorites() {\n    const favoFromStorge = storageService.loadFromStorage(FAVORITES_VIDEOS)\n    if (favoFromStorge) return Promise.resolve(favoFromStorge)\n    else {\n\n        try {\n            const res = await axios.get(BASE_URL);\n            const favorites = res.data;\n            return favorites;\n        } catch {\n            console.log('soryyy');\n        }\n    }\n\n}\n\nfunction chackIsFavorites(list, video) {\n    const videoId = video.id\n    const isFavorites = list.some(video => video.id === videoId)\n    if (isFavorites) {\n        const newList = deleteFromFavorites(list, videoId)\n        console.log('newList is:', newList);\n        storageService.saveToStorage(FAVORITES_VIDEOS, newList)\n        return newList\n    }\n    else return false\n    // return Promise.resolve(video)\n}\n\nasync function saveVideoToFavorites(video) {\n    console.log('video in save front is:', video);\n    video.favorite = true\n    const res = await axios.post(BASE_URL, video);\n    return res.data;\n}\nfunction deleteFromFavorites(list, videoId) {\n    const idx = list.findIndex(video => video.id === videoId)\n    console.log('idx is:', idx);\n    list[idx].favorite = false\n    list.splice(idx, 1)\n    return list\n}\n\nfunction historylist(history, video) {\n    var copy = [...history]\n    console.log('copy is:', copy);\n    copy.push(video)\n}\n\n"]},"metadata":{},"sourceType":"module"}