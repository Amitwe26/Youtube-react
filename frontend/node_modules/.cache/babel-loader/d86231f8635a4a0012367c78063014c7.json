{"ast":null,"code":"import { storageService } from '../services/storageService';\nimport { videoService } from '../services/videoService';\n\nconst _setVideosList = list => ({\n  type: 'SET_LIST',\n  list\n});\n\nconst _setVideo = video => ({\n  type: 'SET_VIDEO',\n  video\n});\n\nconst _saveVideo = video => ({\n  type: 'SAVE_VIDEO',\n  video\n});\n\nconst _deleteVideo = video => ({\n  type: 'REMOVE_VIDEO',\n  video\n});\n\nconst _updateFavorites = favorites => ({\n  type: 'UPDATE_FAVORITES',\n  favorites\n});\n\nexport function setVideosList(name) {\n  return async dispatch => {\n    const results = await videoService.query(name);\n    const list = results.items;\n    dispatch(_setVideosList(list));\n  };\n}\nexport function setVideo(video) {\n  return dispatch => {\n    console.log('videowww is:', video); // storageService.saveToStorage()\n\n    dispatch(_setVideo(video));\n  };\n}\nexport function updateFavorites(favorites, video) {\n  if (video) {\n    deleteVideo(video);\n    return dispatch => {\n      try {\n        dispatch(_updateFavorites(favorites));\n      } catch (err) {\n        console.log('err to update after delete is:', err);\n      }\n    };\n  } else {\n    return dispatch => {\n      try {\n        dispatch(_updateFavorites(favorites));\n        videoService.updateFavoritesList(favorites);\n      } catch (err) {\n        console.log('err is:', err);\n      }\n    };\n  }\n}\nexport function saveVideo(video) {\n  return async dispatch => {\n    const videoToSave = await videoService.saveVideoToFavorites(video);\n    dispatch(_saveVideo(videoToSave));\n  };\n}\nexport function deleteVideo(video) {\n  return async dispatch => {\n    const videoToDelete = await videoService.removeVideo(video);\n    dispatch(_deleteVideo(videoToDelete));\n  };\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Dev/Simples/youtube-app/frontend/src/actions/ListAction.js"],"names":["storageService","videoService","_setVideosList","list","type","_setVideo","video","_saveVideo","_deleteVideo","_updateFavorites","favorites","setVideosList","name","dispatch","results","query","items","setVideo","console","log","updateFavorites","deleteVideo","err","updateFavoritesList","saveVideo","videoToSave","saveVideoToFavorites","videoToDelete","removeVideo"],"mappings":"AAAA,SAASA,cAAT,QAA+B,4BAA/B;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,cAAc,GAAIC,IAAD,KAAW;AAAEC,EAAAA,IAAI,EAAE,UAAR;AAAoBD,EAAAA;AAApB,CAAX,CAAvB;;AACA,MAAME,SAAS,GAAIC,KAAD,KAAY;AAAEF,EAAAA,IAAI,EAAE,WAAR;AAAqBE,EAAAA;AAArB,CAAZ,CAAlB;;AACA,MAAMC,UAAU,GAAID,KAAD,KAAY;AAAEF,EAAAA,IAAI,EAAE,YAAR;AAAsBE,EAAAA;AAAtB,CAAZ,CAAnB;;AACA,MAAME,YAAY,GAAIF,KAAD,KAAY;AAAEF,EAAAA,IAAI,EAAE,cAAR;AAAwBE,EAAAA;AAAxB,CAAZ,CAArB;;AACA,MAAMG,gBAAgB,GAAIC,SAAD,KAAgB;AAAEN,EAAAA,IAAI,EAAE,kBAAR;AAA4BM,EAAAA;AAA5B,CAAhB,CAAzB;;AAEA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAChC,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,OAAO,GAAG,MAAMb,YAAY,CAACc,KAAb,CAAmBH,IAAnB,CAAtB;AACA,UAAMT,IAAI,GAAGW,OAAO,CAACE,KAArB;AACAH,IAAAA,QAAQ,CAACX,cAAc,CAACC,IAAD,CAAf,CAAR;AACH,GAJD;AAKH;AAED,OAAO,SAASc,QAAT,CAAkBX,KAAlB,EAAyB;AAC5B,SAAOO,QAAQ,IAAI;AACfK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bb,KAA5B,EADe,CAEf;;AACAO,IAAAA,QAAQ,CAACR,SAAS,CAACC,KAAD,CAAV,CAAR;AACH,GAJD;AAKH;AAED,OAAO,SAASc,eAAT,CAAyBV,SAAzB,EAAoCJ,KAApC,EAA2C;AAC9C,MAAIA,KAAJ,EAAW;AACPe,IAAAA,WAAW,CAACf,KAAD,CAAX;AACA,WAAOO,QAAQ,IAAI;AACf,UAAI;AACAA,QAAAA,QAAQ,CAACJ,gBAAgB,CAACC,SAAD,CAAjB,CAAR;AACH,OAFD,CAEE,OAAOY,GAAP,EAAY;AACVJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,GAA9C;AACH;AACJ,KAND;AAQH,GAVD,MAUO;AACH,WAAOT,QAAQ,IAAI;AACf,UAAI;AACAA,QAAAA,QAAQ,CAACJ,gBAAgB,CAACC,SAAD,CAAjB,CAAR;AACAT,QAAAA,YAAY,CAACsB,mBAAb,CAAiCb,SAAjC;AACH,OAHD,CAGE,OAAOY,GAAP,EAAY;AACVJ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,GAAvB;AACH;AACJ,KAPD;AAQH;AACJ;AAED,OAAO,SAASE,SAAT,CAAmBlB,KAAnB,EAA0B;AAC7B,SAAO,MAAMO,QAAN,IAAkB;AACrB,UAAMY,WAAW,GAAG,MAAMxB,YAAY,CAACyB,oBAAb,CAAkCpB,KAAlC,CAA1B;AACAO,IAAAA,QAAQ,CAACN,UAAU,CAACkB,WAAD,CAAX,CAAR;AACH,GAHD;AAIH;AACD,OAAO,SAASJ,WAAT,CAAqBf,KAArB,EAA4B;AAC/B,SAAO,MAAOO,QAAP,IAAoB;AACvB,UAAMc,aAAa,GAAG,MAAM1B,YAAY,CAAC2B,WAAb,CAAyBtB,KAAzB,CAA5B;AACAO,IAAAA,QAAQ,CAACL,YAAY,CAACmB,aAAD,CAAb,CAAR;AAEH,GAJD;AAKH","sourcesContent":["import { storageService } from '../services/storageService'\nimport { videoService } from '../services/videoService'\n\nconst _setVideosList = (list) => ({ type: 'SET_LIST', list })\nconst _setVideo = (video) => ({ type: 'SET_VIDEO', video })\nconst _saveVideo = (video) => ({ type: 'SAVE_VIDEO', video })\nconst _deleteVideo = (video) => ({ type: 'REMOVE_VIDEO', video })\nconst _updateFavorites = (favorites) => ({ type: 'UPDATE_FAVORITES', favorites })\n\nexport function setVideosList(name) {\n    return async (dispatch) => {\n        const results = await videoService.query(name)\n        const list = results.items\n        dispatch(_setVideosList(list))\n    }\n}\n\nexport function setVideo(video) {\n    return dispatch => {\n        console.log('videowww is:', video);\n        // storageService.saveToStorage()\n        dispatch(_setVideo(video))\n    }\n}\n\nexport function updateFavorites(favorites, video) {\n    if (video) {\n        deleteVideo(video)\n        return dispatch => {\n            try {\n                dispatch(_updateFavorites(favorites))\n            } catch (err) {\n                console.log('err to update after delete is:', err);\n            }\n        }\n\n    } else {\n        return dispatch => {\n            try {\n                dispatch(_updateFavorites(favorites))\n                videoService.updateFavoritesList(favorites)\n            } catch (err) {\n                console.log('err is:', err);\n            }\n        }\n    }\n}\n\nexport function saveVideo(video) {\n    return async dispatch => {\n        const videoToSave = await videoService.saveVideoToFavorites(video)\n        dispatch(_saveVideo(videoToSave))\n    }\n}\nexport function deleteVideo(video) {\n    return async (dispatch) => {\n        const videoToDelete = await videoService.removeVideo(video)\n        dispatch(_deleteVideo(videoToDelete))\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}